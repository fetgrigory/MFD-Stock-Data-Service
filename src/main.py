'''
This module make

Author: Fetkulin Grigory, Fetkulin.G.R@yandex.ru
Starting 23/09/2025
Ending //

'''
# Installing the necessary libraries
import psycopg2
import uvicorn
from fastapi import FastAPI, Path, Form, HTTPException
from psycopg2 import errorcodes
from database import create_users_table, insert_user, delete_user

app = FastAPI()
# Creating a table at the start of the application
create_users_table()


# Endpoint for adding a new user
@app.post(
    "/users",
    tags=["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üë§"],
    summary="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    status_code=201
)
# Return the name and email
def create_user(
    name: str = Form(..., description="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
    email: str = Form(..., description="Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
):
    try:
        user_id = insert_user(name, email)
        return {"id": user_id, "–ò–º—è": name, "–ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã": email}

    except psycopg2.Error as e:
        if e.pgcode == errorcodes.UNIQUE_VIOLATION:
            raise HTTPException(status_code=400, detail="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") from e
        else:
            raise


# Endpoint for deleting a user by ID
@app.delete(
    "/users/{user_id}",
    tags=["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üë§"],
    summary="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID",
    status_code=200
)
# Return a message confirming the deletion of the user
def remove_user(user_id: int = Path(..., description="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")):
    deleted_count = delete_user(user_id)
    if deleted_count == 0:
        raise HTTPException(status_code=404, detail="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return {"message": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"}


if __name__ == "__main__":
    uvicorn.run("main:app", host='127.0.0.1', port=8000, reload=True)
