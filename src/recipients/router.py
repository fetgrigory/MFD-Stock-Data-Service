'''
This module make

Author: Fetkulin Grigory, Fetkulin.G.R@yandex.ru
Starting 30/09/2025
Ending //

'''
# Installing the necessary libraries
from pathlib import Path as SysPath
import psycopg2
from fastapi import APIRouter, Form, HTTPException, Path, Query, Request
from fastapi.templating import Jinja2Templates
from psycopg2 import errorcodes
from src.database import delete_recipient_data, get_all_recipients, insert_recipient_data, update_recipient_data

router = APIRouter(tags=["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üë§"])

# The absolute path to the templates folder
BASE_DIR = SysPath(__file__).resolve().parent.parent
templates = Jinja2Templates(directory=str(BASE_DIR / "templates"))


# Endpoint for adding a new recipient
@router.get("/admin")
def get_recipient_form(request: Request):
    # List of current recipients
    recipients = get_all_recipients()
    return templates.TemplateResponse("admin.html", {"request": request, "recipients": recipients})


@router.post("/admin")
def create_recipient(
    name: str = Form(..., description="–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è"),
    email: str = Form(..., description="Email –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
):
    try:
        recipient_id = insert_recipient_data(name, email)
        return {"id": recipient_id, "–ò–º—è": name, "Email": email}
    except psycopg2.Error as e:
        if e.pgcode == errorcodes.UNIQUE_VIOLATION:
            raise HTTPException(status_code=400, detail="–ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") from e
        else:
            raise


# Endpoint for update recipient
@router.patch(
    "/recipients/{recipient_id}",
    tags=["–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ üë§"],
    summary="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è",
    status_code=200
)
def update_recipient(
    recipient_id: int = Path(..., description="ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"),
    name: str | None = Query(None, description="–ù–æ–≤–æ–µ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è"),
    email: str | None = Query(None, description="–ù–æ–≤—ã–π email –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
):
    if name is None and email is None:
        raise HTTPException(status_code=400, detail="–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø–æ–ª–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    try:
        updated_recipient = update_recipient_data(recipient_id, name, email)
        if not updated_recipient:
            raise HTTPException(status_code=404, detail="–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return {"id": recipient_id, "–ò–º—è": updated_recipient["name"], "Email": updated_recipient["email"]}

    except psycopg2.Error as e:
        if e.pgcode == errorcodes.UNIQUE_VIOLATION:
            raise HTTPException(status_code=400, detail="–ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") from e
        else:
            raise


# Endpoint for deleting a recipient by ID
@router.delete(
    "/recipients/{recipient_id}",
    tags=["–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ üë§"],
    summary="–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è –ø–æ ID",
    status_code=200
)
def delete_recipient(recipient_id: int = Path(..., description="ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")):
    deleted_count = delete_recipient_data(recipient_id)
    if deleted_count == 0:
        raise HTTPException(status_code=404, detail="–ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return {"message": f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å ID {recipient_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω"}
